<?phpclass Entrainement{        var $tableau = array();    function Entrainement(){        $t=time();        $tableau[$t]=0;    }        function ajouterUnite($type,$niveau){        $dernierTime = 0;        if(is_array($this->tableau))        foreach($this->tableau as $key => $unite){ // On déroule le tableau pour récupérer la derniere date            $dernierTime = $key;         }        if($dernierTime==0){$dernierTime = time();}        $tempDeProd=productionLevel($niveau,$GLOBALS['Tunite'][$type]/$GLOBALS['vitesse']); // On trouve le temps que met l'unité en question à ce produire                echo 'lol';                //$tempsDeProd = $niveau; //productionLevel(,$tempsDeProd);                $finProd=$tempDeProd+$dernierTime++;        $this->tableau[$finProd]=$type;    }            function ajouterGroupe($type,$nombre,$niveau){        for($x=0;$x<$nombre;$x++){            $this->ajouterUnite($type,$niveau);        }    }        function afficheListe(){        $html= '<table width="115">';        $html.= '';        $first=0;        $nb=0;        $last=0;        if(is_array($this->tableau))            foreach($this->tableau as $key => $unite){                                if($first==0){                $html.= '<tr><td align="left">Durée:</td><td align="right">'; // </td><td>                                if(temp_seconde($key-time()) < 0 ){                  $html.= "0";                }else{                  $html.= '<div id="timer'.$_SESSION['timer']++.'">'.temp_seconde($key-time()).'</div>';                }                                $html.='</td></tr>                ';}                                if($unite != $last AND $first == 1){                    $html.= '<tr height="15"><td align="left">'.icoUnite($last,20).'</td><td align="right">'.$nb.'</td></tr>'; // <td>'.temp_seconde($key-time()-$GLOBALS['Tunite'][$unite]).'</td>                    $nb = 1;                }else{                    $nb++;                }                $last = $unite;                $first = 1;            }            if($nb>0){                $html.= '<tr><td align="left">'.icoUnite($last,20).'</td><td align="right">'.$nb.'</td></tr>'; // <td>'.temp_seconde($key-time()-$GLOBALS['Tunite'][$unite]).'</td>            }        $html.= '</table>';        return $html;    }        function afficheTableau(){        $html= '<table align="center" width="80%" class="message">';        $html.= '';        $first=0;        $nb=0;        $last=0;        if(is_array($this->tableau))            foreach($this->tableau as $key => $unite){                                if($first==0){                $html.= '<tr><td>Durée :</td><td>';                                if(temp_seconde($key-time()) < 0 ){                  $html.= "0";                }else{                  $html.= '<div id="timer'.$_SESSION['timer']++.'">'.temp_seconde($key-time()).'</div>';                }                                $html.='</td><td></td></tr>                <tr><td><h3>Unite</h3></td><td><h3>Nombre</h3></td><td><h3>Finis</h3></td></tr>';}                                if($unite != $last AND $first == 1){    // timer'.$_SESSION['timer']++.'                    $html.= '<tr><td>'.icoUnite($last).'</td><td>'.$nb.'</td><td><div id="">'.temp_seconde($key-time()).'</div></td></tr>'; //                     $nb = 1;                }else{                    $nb++;                }                $last = $unite;                $first = 1;            }            if($nb>0){          //timer'.$_SESSION['timer']++.'                $html.= '<tr><td>'.icoUnite($last).'</td><td>'.$nb.'</td><td><div id="">'.temp_seconde($key-time()-$GLOBALS['Tunite'][$unite]/$GLOBALS['vitesse']).'</div></td></tr>';            }        $html.= '</table>';        return $html;    }    function afficheEntrainement($ville){    $Tech = $GLOBALS['recherche'];    $Tech->loadVille($ville);        //print_r($Tech);		$nu=0;			$html= '<table width="100%" align="center">';			$html.='<tr><td width="50"><h3>Unité</h3></td><td width="150" align="center"><h3>Requis</h3></td><td width="60" align="left"><h3>Nombre</h2></td><td width="50" align="center"></td></tr>';						//print_r($GLOBALS['unite']);			foreach($GLOBALS['unite'] as $key => $value){        if($Tech->UniteFaisable($key) == 0){                      				$html.= '<tr height="28">                 <td align="center">'.icoUnite($key).'</td>';				$html.= '<td align="center">'.$GLOBALS['Bunite'][$key].' '.icoBois().'  '.$GLOBALS['Ounite'][$key].' '.icoOrs().'  '.temp_seconde(productionLevel($this->caserne,$GLOBALS['Tunite'][$key]/$GLOBALS['vitesse'])).' '.icoTime().'</td>';				$html.= '<td align="center"><input align="center" id="u'.$key.'" class="inputInt" name="u'.$key.'" maxlength="8" autocomplete="off" type="text" value=""></td>';				$html.= '<td align="center">&nbsp;<button class="search" type="submit" title="Valider" onClick="recruteUnite('.$key.')"></button></td>';				$html.= '</tr>';				$nu++;				}			}			$html.= '</table>';												return $html;    }        function terminerEntrainement(){        $newUnite = array();        if(is_array($this->tableau))        foreach($this->tableau as $key => $unite){            if($key <= time()){                $newUnite[]=$unite;                unset($this->tableau[$key]);            }        }        return $newUnite;    }        function prochainTermine(){        $dateProchain = 0;        if(is_array($this->tableau))        foreach($this->tableau as $key => $unite){            $dateProchain = $key;            break;        }        if($dateProchain==0){            //return time()+10000;            return 0;        }else{            return $dateProchain-time();        }    }}?>